// Code generated by goctl. DO NOT EDIT.
// Source: follow.proto

package server

import (
	"context"

	"zh-go-zero/application/follow/rpc/internal/logic"
	"zh-go-zero/application/follow/rpc/internal/svc"
	"zh-go-zero/application/follow/rpc/service"
)

type FollowServer struct {
	svcCtx *svc.ServiceContext
	service.UnimplementedFollowServer
}

func NewFollowServer(svcCtx *svc.ServiceContext) *FollowServer {
	return &FollowServer{
		svcCtx: svcCtx,
	}
}

func (s *FollowServer) Follow(ctx context.Context, in *service.FollowRequest) (*service.FollowResponse, error) {
	l := logic.NewFollowLogic(ctx, s.svcCtx)
	return l.Follow(in)
}

func (s *FollowServer) UnFollow(ctx context.Context, in *service.UnFollowRequest) (*service.UnFollowResponse, error) {
	l := logic.NewUnFollowLogic(ctx, s.svcCtx)
	return l.UnFollow(in)
}

func (s *FollowServer) FollowList(ctx context.Context, in *service.FollowListRequest) (*service.FollowListResponse, error) {
	l := logic.NewFollowListLogic(ctx, s.svcCtx)
	return l.FollowList(in)
}

func (s *FollowServer) FansList(ctx context.Context, in *service.FansListRequest) (*service.FansListResponse, error) {
	l := logic.NewFansListLogic(ctx, s.svcCtx)
	return l.FansList(in)
}
